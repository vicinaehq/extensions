name: Deploy Extensions

on:
  push:
    branches:
      - main
    paths:
      - 'extensions/**'
      - '.github/workflows/deploy.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      extensions: ${{ steps.detect.outputs.extensions }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed extensions
        id: detect
        run: |
          # Get the previous commit on main
          BEFORE_SHA="${{ github.event.before }}"

          # If this is the first push, compare with first commit
          if [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
            BEFORE_SHA=$(git rev-list --max-parents=0 HEAD)
          fi

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only $BEFORE_SHA HEAD)

          # Extract unique extension names from paths like "extensions/foo/..."
          EXTENSIONS=$(echo "$CHANGED_FILES" | \
            grep "^extensions/" | \
            cut -d'/' -f2 | \
            sort -u | \
            jq -R -s -c 'split("\n") | map(select(length > 0))')

          echo "Changed extensions: $EXTENSIONS"
          echo "extensions=$EXTENSIONS" >> $GITHUB_OUTPUT

  validate:
    needs: detect-changes
    if: needs.detect-changes.outputs.extensions != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        extension: ${{ fromJson(needs.detect-changes.outputs.extensions) }}

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Validate extension
        run: bun scripts/validate-extension.ts ${{ matrix.extension }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [detect-changes, validate]
    runs-on: ubuntu-latest
    environment: production
    strategy:
      fail-fast: false
      matrix:
        extension: ${{ fromJson(needs.detect-changes.outputs.extensions) }}

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Deploy extension
        run: bun scripts/deploy-extension.ts ${{ matrix.extension }}
        env:
          STORE_BASE_URL: ${{ secrets.STORE_BASE_URL || 'http://localhost:3000' }}
          STORE_API_SECRET: ${{ secrets.STORE_API_SECRET }}
